var COMSNamespace = COMSNamespace || {};

COMSNamespace.WidgeFacilityNewsViewModel = new function () {
    var self = this;

    // Properties
    self.operationInProgress = ko.observable(false);
    self.data = ko.observableArray();

    self.LoadWidget = function () {
        if (self.operationInProgress()) {
            return;
        }
        self.operationInProgress(true);
        COMSNamespace.ShowWidgetOverlay('divNews');
        $.ajax({
            type: 'GET',
            contentType: "application/json;",
            url: '/widgets/facilityNews/data',
            success: function (news) {
                self.operationInProgress(false);
                self.data.removeAll();
                var x = ko.mapping.fromJS(news);
                self.data(x());
                self.LoadNewsState();
                $('#divNews').show();
                COMSNamespace.HideWidgetOverlay('divNews');
            },
            error: function (emp) {
                self.operationInProgress(false);
                COMSNamespace.HideWidgetOverlay('divNews');
            }
        });

        return false;
    }

    self.HideNews = function (news) {
        news.IsHidden(true);
        self.SaveNewsState();
    }

    self.ClearAll = function () {
        ko.utils.arrayForEach(self.data(), function (news) {
            if (!news.IsAlert()) {
                news.IsHidden(true);
            }
        });
        self.SaveNewsState();
    }

    self.ResetAll = function () {
        ko.utils.arrayForEach(self.data(), function (news) {
            news.IsHidden(false);
        });
        self.SaveNewsState();
    }

    self.SaveNewsState = function () {
        if (typeof (Storage) !== "undefined") {
            var now = new Date();
            var stateObject = {
                dateCleared: new Date(now.getFullYear(), now.getMonth(), now.getDate(), 0, 0, 0, 0).toISOString(),
                items: []
            }

            ko.utils.arrayForEach(self.data(), function (news) {
                if (news.IsHidden()) {
                    stateObject.items.push({
                        ID: news.ID()
                    });
                }
            });
            var key = "FacilityNewsCleared_";
            localStorage.setItem(key, JSON.stringify(stateObject));
        }
    }

    self.LoadNewsState = function () {
        if (typeof (Storage) !== "undefined") {
            var key = "FacilityNewsCleared_";
            var stateString = localStorage.getItem(key);
            if (stateString) {
                var stateObject = JSON.parse(stateString);
                if (stateObject && stateObject.items) {
                    var now = new Date();
                    var nowDate = new Date(now.getFullYear(), now.getMonth(), now.getDate(), 0, 0, 0, 0).toISOString();
                    if (nowDate != stateObject.dateCleared) {
                        localStorage.removeItem(key);
                    }
                    else {
                        ko.utils.arrayForEach(stateObject.items, function (state) {
                            var newsItem = ko.utils.arrayFirst(self.data(), function (news) {
                                return news.ID() == state.ID;
                            });
                            if (newsItem) {
                                newsItem.IsHidden(true);
                            }
                        });
                    }
                }
            }
        }
    }

}

$(document).ready(function () {
    if (COMSNamespace.Widget && COMSNamespace.Widget.RegisterWidget) {
        COMSNamespace.Widget.RegisterWidget(COMSNamespace.WidgeFacilityNewsViewModel, 'divWidgetFacilityNews');
    }
});
