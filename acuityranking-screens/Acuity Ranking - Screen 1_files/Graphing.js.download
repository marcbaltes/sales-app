var COMSNamespace = COMSNamespace || {};

COMSNamespace.DrawGraphResidentCaddEntity = function (caddIdx, ResidentIdx, yScaleStart, yScaleStepWidth, yScaleSteps, redrawOnFunc, singleResultSet) {
    var context = {
        processing: ko.observable(false),
        mdata: null,

        ReDraw: function (ele) {

            if (context.processing()) {
                $(ele).siblings('.DivProcessing').each(function (index, div) {
                    $(div).show();
                });
                return true;
            }
            else {
                $(ele).siblings('.DivProcessing').each(function (index, div) {
                    $(div).hide();
                });
            }
            if (!context.mdata) { return true; }

            if (redrawOnFunc && redrawOnFunc() == false) {
                return true;
            }
            if (!ele) return true;
            var ctx = ele.getContext("2d");
            var myNewChart = new Chart(ctx);
            myNewChart.Scatter(context.mdata, context.options).draw();
            return true;
        },
        FetchData: function () {

            if (context.mdata) return;
            if (ResidentIdx == '') return;
            context.processing(true);
            context.mdata = [];
            var today = new Date();
            var startdate = new Date();
            startdate.setDate(today.getDate() - 30);
            var requestModel = {
                ResidentIdx: ResidentIdx,
                StartDate: startdate.toUTCString(),
                SingleResultSet: (singleResultSet == true)
            };
            if (typeof caddIdx === "string") {
                requestModel.CaddEntityIdx = new Array(caddIdx);
            }
            else {
                requestModel.CaddEntityIdx = caddIdx;
            }
            var params = ko.toJSON(requestModel);

            $.ajax({
                type: 'POST',
                contentType: "application/json;",
                dataType: "json",
                url: '/history/observationhistory/GetObservationHistory',
                data: params,
                success: function (msg) {
                    //                    $(ele).siblings('.DivProcessing').each(function (index, div) {
                    //                        $(div).hide();
                    //                    });
                    var srvdata = JSON.parse(msg);
                    var mdata = context.mdata;
                    ko.utils.arrayForEach(srvdata.Observations, function (item) {
                        var color = '#F16220';
                        if (mdata.length == 1) {
                            color = 'rgba(185, 237, 128, 1)';
                        }
                        if (mdata.length == 2) {
                            color = '#c0c0c0';
                        }
                        var dataSet = {
                            label: item.CADDName,
                            strokeColor: color,
                            pointColor: color,
                            pointStrokeColor: '#fff',
                            data: []
                        };
                        for (var i = 0; i < item.Observations.length; i++) {
                            var observation = item.Observations[i];
                            var scatterElement = {
                                x: new Date(observation.Collected),
                                y: observation.Value
                            };
                            dataSet.data.push(scatterElement);
                        }
                        mdata.push(dataSet);
                    });

                    context.options = {
                        emptyDataMessage: 'No chart data within 30 days',
                        animation: true,
                        responsive: false,
                        showTooltips: true,
                        scaleType: 'date',
                        pointDotRadius: '3',
                        pointHitDetectionRadius: '4',
                        bezierCurve: false,
                        xMinimum: startdate,
                        xMaximum: today,
                        labelAngleOverride: -Math.PI / 4,
                        pointHitDetectionRadius: 1
                    };
                    context.options.scaleOverride = (yScaleStart || yScaleStart == 0) && yScaleStepWidth && yScaleSteps;
                    context.options.scaleStartValue = (yScaleStart || yScaleStart == 0) ? yScaleStart : null;
                    context.options.scaleStepWidth = yScaleStepWidth ? yScaleStepWidth : null;
                    context.options.scaleSteps = yScaleSteps ? yScaleSteps : null;
                    context.options.tooltipTemplate = "<%=argLabel%>:<%=valueLabel%>";
                    context.options.multiTooltipTemplate = "<%=argLabel%>:<%=valueLabel%>";
                    context.options.scaleDateTimeFormat = "mmm d";
                    context.processing(false);
                },
                error: function (error) {
                    //                    $(ele).siblings('.DivProcessing').each(function (index, div) {
                    //                        $(div).hide();
                    //                    });
                    alert(error);
                    context.processing(false);
                    context.mdata = null;
                }
            });

        }
    };
    context.FetchData();
    return context;
}

COMSNamespace.Vitals = {
    Temperature : "cebe4fd5-4978-4670-9d44-b382821a2022",
    Systolic    : "f776b9f8-878e-4ebf-9f30-11cdd25978e5",
    Diastolic   : "5a6dd94a-2e29-49cc-8849-19076e4fd6c0",
    HeartRate   : "87574337-9c8b-47dd-8637-c7d76c8f7032",
    LegacyApicalHR : "6a54322e-ae66-419e-9e7d-5c670dadf0fa",
    LegacyRadialHR : "c3fbe28d-688c-4080-a5b8-dc3413772bea",
    Respirations   : "70272bfc-6214-4b7c-8f81-4cd1a46efa9c",
    PulseOx : "96362b41-0dc5-42a8-9f81-018f1a7121f3",
    PainScore: "f487eebd-3e93-4d26-b769-ed59e27ad7aa",
    Weight  :"8abf8721-84e3-4973-a765-ade7425a86b2",
    LastBMDate  : "e24f5259-80a5-422d-a4c2-d08b517aab2e",
    Glucose : "e8804e04-5b05-4fe1-859e-026c137b5162"
};
 
  