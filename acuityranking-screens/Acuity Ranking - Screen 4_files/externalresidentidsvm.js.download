COMSNamespace = COMSNamespace || {};
COMSNamespace.MyResidents = COMSNamespace.MyResidents || {};

COMSNamespace.MyResidents.ExternalResidentIDsViewModelCreate = function () {
    var self = this;

    self.ExternalIDList = ko.observableArray();

    self.CanAddExternalID = ko.computed(function () {
        let source = $('#hdnExternalIDSource').val();
        let exists = ko.utils.arrayFirst(self.ExternalIDList(), function (id) {
            return id.IdentifierSource() == source;
        });

        return (source && !exists);
    }, self);


    self.ExternalIDs = function (item) {
        $('#divExternalIDsDelete').hide();
        $('#divExternalIDsAdd').hide();
        self.ExternalIDList.removeAll();
        if (item.FullName) {
            $('#divExternalIDsName').text(item.FullName());
        }
        else if (item.LastName && item.FirstName()) {
            $('#divExternalIDsName').text(item.LastName() + ', ' + item.FirstName());
        }
        $('#divExternalIDsMsg').text('');
        $('#divExternalIDs').modal("show");
        let resIdx = item.ResidentIdx ? item.ResidentIdx() : item.ResResident_Idx();
        let admitIdx = item.Idx();
        var searchModel = {
            Idx: item.Idx(),
            ResidentIdx: resIdx,
            AdmissionTypeIdx: '00000000-0000-0000-0000-000000000000'
        }        
        $('#hdnExternalIDResident').val(resIdx);
        $('#hdnExternalIDAdmission').val(admitIdx);
        $.ajax({
            type: 'POST',
            contentType: "application/json;",
            url: '/resident/myresidents/externalids',
            data: ko.toJSON(searchModel),
            success: function (results) {
                $('#hdnExternalIDSource').val(results.IdentifierSource)
                var x = ko.mapping.fromJS(results.IDs);
                self.ExternalIDList(x());
                if (results.IDs.length == 0) {
                    $('#divExternalIDsMsg').text('No IDs defined.');
                }
            },
            error: function () {
                $('#divExternalIDsMsg').text('Unable to load IDs.');
            }
        });
    }

    self.DeleteExternalIDShow = function (id, index) {
        $('#divExternalDelete_' + index).show();
    }

    self.DeleteExternalID = function (id) {
        ShowProgressDisplay();
        $.ajax({
            type: 'GET',
            contentType: "application/json;",
            url: '/resident/myresidents/deleteexternalid?residentidx=' + $('#hdnExternalIDResident').val() + '&admitIdx=' + $('#hdnExternalIDAdmission').val() + '&idsource=' + id.IdentifierSource(),
            success: function (result) {
                self.ExternalIDList.remove(id);
                if (self.ExternalIDList().length == 0)
                    $('#divExternalIDsMsg').text('No IDs defined.');
                HideProgressDisplay();
            },
            error: function () {
                HideProgressDisplay();
            }
        });
    }

    self.AddExternalIDShow = function () {
        $('#textNewExternalID').val('');
        $('#divExternalIDsAdd').show();
    }

    self.AddExternalID = function () {
        $('#divExternalIDsMsg').text('');
        if (!$('#textNewExternalID').val()) {
            $('#divExternalIDsMsg').text('An ID must be specified');
            return;
        }
        ShowProgressDisplay();
        $.ajax({
            type: 'GET',
            contentType: "application/json;",
            url: '/resident/myresidents/addexternalid?residentidx=' + $('#hdnExternalIDResident').val() + '&admitIdx=' + $('#hdnExternalIDAdmission').val() + '&idsource=' + $('#hdnExternalIDSource').val() + '&id=' + $('#textNewExternalID').val(),
            success: function (result) {
                var model = {
                    Identifier: $('#textNewExternalID').val(),
                    IdentifierSource: $('#hdnExternalIDSource').val(),
                    ResResident_idx: $('#hdnExternalIDResident').val()
                }
                let m = ko.mapping.fromJS(model);
                self.ExternalIDList.push(m);
                $('#divExternalIDsAdd').hide();
                HideProgressDisplay();
            },
            error: function () {
                HideProgressDisplay();
            }
        });
    }

}
